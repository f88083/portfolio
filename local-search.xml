<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>VSCode Extension Development - Hexo Snippet Paste Tool for Fluid</title>
    <link href="/portfolio/2024/03/22/VSCode-Extension-Development-Hexo-Snippet-Paste-Tool-for-Fluid/"/>
    <url>/portfolio/2024/03/22/VSCode-Extension-Development-Hexo-Snippet-Paste-Tool-for-Fluid/</url>
    
    <content type="html"><![CDATA[<blockquote><p>A VSCode extension which allows pasting code snippets automatically</p></blockquote><a class="btn" href="https://marketplace.visualstudio.com/items?itemName=Shih-Che-Lai-Simon.hexo-snippet-paste-tool-for-fluid"  title="Hexo Snippet Paste Tool for Fluid Marketplace" target="_blank">Microsoft Marketplace</a><a class="btn" href="https://github.com/f88083/hexo-snippet-paste-tool-for-fluid"  title="Repository" target="_blank">Extension Github repository</a><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/rsOLx7v.png" alt="Commands list"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://github.com/f88083/hexo-snippet-paste-tool-for-fluid/raw/HEAD/img/paste-note.png" alt="Pasting &quot;note&quot; snippet"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://github.com/f88083/hexo-snippet-paste-tool-for-fluid/raw/HEAD/img/pasted-note.png" alt="Pasted &quot;note&quot; snippet"></div></div></div><h2 id="Project-Description"><a href="#Project-Description" class="headerlink" title="Project Description"></a>Project Description</h2><p>This extension is tailored for <a href="https://hexo.io/index.html">Hexo</a> users utilizing the <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid theme</a>, providing automatic template snippet pasting.</p><h3 id="Using"><a href="#Using" class="headerlink" title="Using"></a>Using</h3><ul><li>TypeScript</li><li>Git</li><li>Nodejs</li></ul><h3 id="Key-Features"><a href="#Key-Features" class="headerlink" title="Key Features"></a>Key Features</h3><ul><li>Open source</li><li>Paste snippet by typing and choosing the commands</li></ul><h3 id="Code-Showcase"><a href="#Code-Showcase" class="headerlink" title="Code Showcase"></a>Code Showcase</h3><span class="label label-primary">Extension main entry</span><figure><div class="code-wrapper"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> vscode <span class="token keyword">from</span> <span class="token string">'vscode'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> youtubeEmbedPaste <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/youtubeEmbed'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> foldBlock <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/foldBlock'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> note <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/note'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> label <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/label'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> checkBox <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/checkBox'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/button'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> groupImages <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/groupImages'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mermaid <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./util/mermaid'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activate</span><span class="token punctuation">(</span>context<span class="token operator">:</span> vscode<span class="token punctuation">.</span>ExtensionContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// Register multiple commands</span><span class="token keyword">let</span> youtubeEmbedCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteYoutubeEmbed'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">youtubeEmbedPaste</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> foldBlockCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteFoldBlock'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">foldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> noteCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteNote'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">note</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> labelCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteLabel'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> checkBoxCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteCheckBox'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">checkBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> buttonCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteButton'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> groupImagesCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteGroupImages'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">groupImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> mermaidCommand <span class="token operator">=</span> vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">'hexo-snippet-paste-tool-for-fluid.pasteMermaid'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">mermaid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Add the commands to the context</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>youtubeEmbedCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>foldBlockCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>noteCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>labelCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>checkBoxCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>buttonCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>groupImagesCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span>subscriptions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mermaidCommand<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// This method is called when your extension is deactivated</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deactivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><span class="label label-primary">Pasting Note Function</span><figure><div class="code-wrapper"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">// Pasting "note"</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> vscode <span class="token keyword">from</span> <span class="token string">'vscode'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">note</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Obtain the active text editor</span>    <span class="token keyword">const</span> editor <span class="token operator">=</span> vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span>activeTextEditor<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>editor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token comment">// UI for Width and Height Input</span>    vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">showInputBox</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        value<span class="token operator">:</span> <span class="token string">'info'</span><span class="token punctuation">,</span>        prompt<span class="token operator">:</span> <span class="token string">'Type in the type of the note (e.g., primary, default, info, success, warning, danger)'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>input <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// When user provide any input</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Prepare the fold block content</span>            <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">prepareNote</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Inserting the content to the editor</span>            editor<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span>editBuilder <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                editBuilder<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>editor<span class="token punctuation">.</span>selection<span class="token punctuation">.</span>active<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">prepareNote</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Modify the fold block content with the specified type and title</span>    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&#123;% note </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> %&#125;\n\n&#123;% endnote %&#125;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>VSCode Extension</tag>
      
      <tag>TypeScript</tag>
      
      <tag>Git</tag>
      
      <tag>Nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MSc Dissertation - Comparative Performance Analysis of AODV and DSDV Against Blackhole and Flooding Attacks in MANET Using NS-3</title>
    <link href="/portfolio/2024/03/21/MSc-Dissertation-Comparative-Performance-Analysis-of-AODV-and-DSDV-Against-Blackhole-and-Flooding-Attacks-in-MANET-Using-NS-3/"/>
    <url>/portfolio/2024/03/21/MSc-Dissertation-Comparative-Performance-Analysis-of-AODV-and-DSDV-Against-Blackhole-and-Flooding-Attacks-in-MANET-Using-NS-3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Use Network Simulator 3 to simulate the MANET with AODV and DSDV routing protocols under Blackhole and Flooding attacks to observe and analyse the impact caused by the attacks and determine the more effective protocol against them by using Packet Delivery Ratio, End-to-end Delay, and Throughput as the metrics.</p></blockquote><a class="btn" href="https://github.com/f88083/my_works/tree/main/msc_dissertation"  title="Relative Code Repository" target="_blank">GitHub</a><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/uPvjzN5.png" alt="Dissertation title page"></div><div class="group-image-wrap"><img src="https://i.imgur.com/nh4rEQ9.png" alt="Terminal executes ns-3"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/LI04y1d.png" alt="Simulation process"></div><div class="group-image-wrap"><img src="https://i.imgur.com/ax46BuL.png" alt="AODV"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/hvBdKe1.png" alt="Blackhole attack"></div><div class="group-image-wrap"><img src="https://i.imgur.com/Nr2xN1B.png" alt="Flooding attack"></div></div></div><h2 id="Project-Description"><a href="#Project-Description" class="headerlink" title="Project Description"></a>Project Description</h2><p>Mobile Ad-hoc network (MANET) is an infrastructure-free network that can be configured by the devices within the system. MANET can operate in severe situations like natural disasters and oil drilling. However, MANET is vulnerable to various attacks, such as Blackhole and Flooding attacks, due to its limited computing resources, decentralisation, and dynamic topology. Therefore, realising the impact of the attacks on the network is critical to develop an effective countermeasure. This project uses Network Simulator 3 to simulate the MANET with AODV and DSDV routing protocols under Blackhole and Flooding attacks to observe and analyse the impact caused by the attacks and determine the more effective protocol against them by using Packet Delivery Ratio, End-to-end Delay, and Throughput as the metrics. The result shows that AODV is more competent than DSDV in most scenarios regarding Packet Delivery Ratio and Throughput. However, DSDV mainly performs better than AODV in End-to-end Delay.</p><h3 id="Using"><a href="#Using" class="headerlink" title="Using"></a>Using</h3><ul><li>C++</li><li>Python</li><li>Shell script – bash script</li><li>Network Simulator 3</li><li>Linux</li></ul><h3 id="Achievements"><a href="#Achievements" class="headerlink" title="Achievements"></a>Achievements</h3><ul><li>Simulate MANET</li><li>Implement Blackhole attack</li><li>Implement Flooding attack</li><li>Comparative analysis</li></ul><h2 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h2><h3 id="Aim"><a href="#Aim" class="headerlink" title="Aim"></a>Aim</h3><p>This dissertation aims to survey and compare the reactive and proactive routing protocols to determine which protocol is more resilient when the MANET is under attack. The research focuses on AODV, a reactive protocol, and DSDV, a proactive protocol, since they are the most common protocols used in MANETs. Blackhole and Flooding attacks have been selected for this study because they are two types of common attacks.</p><h3 id="Objectives"><a href="#Objectives" class="headerlink" title="Objectives"></a>Objectives</h3><ul><li>Objective 1: Conduct a Comprehensive literature review on Blackhole and Flooding attacks in MANET.</li><li>Objective 2: Review and detail how reactive and proactive routing protocols operate, focusing on AODV and DSDV.</li><li>Objective 3: Determine simulation parameters by reviewing real-world situations.</li><li>Objective 4: Design and implement simulations on NS-3 (Network Simulator 3) to measure packet delivery ratio (PDR), end-to-end delay (E2E), and throughput.</li><li>Objective 5: Create attack scenarios (Blackhole and Flooding) using C++ programming in NS-3.</li><li>Objective 6: Analyse and explain simulation results of AODV and DSDV with and without the attacks</li><li>Objective 7: Conduct a comparative analysis of the impact of Blackhole and Flooding attacks on AODV and DSDV.</li><li>Objective 8: Summarise findings and provide recommendations for future research on MANET security.</li></ul><h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><p>In conclusion, AODV is more reliable than DSDV against the Blackhole and Flooding attacks regarding PDR and throughput. While DSDV is more capable than AODV against the attacks in end-to-end delay but not in the 50-node area when the Blackhole attack exists. Therefore, AODV is generally more resilient than DSDV under the Blackhole and Flooding attack. This conclusion is similar to the work by M. N. B. Anwar’s <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="M. N. B. Anwar, “Performance analysis of aodv, olsr, dsdv routing protocols in manet under black hole attack,” in Proceedings of the international conference on computing advancements, pp. 1–5, 2020.">[1]</span></a></sup>, A. Singh et al. <sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="A. Singh, G. Singh, and M. Singh, “Comparative study of olsr, dsdv, aodv, dsr and zrp routing protocols under blackhole attack in mobile ad hoc network,” in Intelligent Communication, Control and Devices: Proceedings of ICICCD 2017, pp. 443–453, Springer, 2018.">[2]</span></a></sup>, and A. A. Chavan, D. S. Kurule, and P. U. Dere <sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="A. Chavan, D. Kurule, and P. Dere, “Performance analysis of aodv and dsdv routing protocol in manet and modifications in aodv against black hole attack,” Procedia Computer Science, vol. 79, pp. 835–844, 2016.">[3]</span></a></sup>.</p><h2 id="Code-Showcase"><a href="#Code-Showcase" class="headerlink" title="Code Showcase"></a>Code Showcase</h2><span class="label label-info">C++ codes to set up the entire MANET simulation</span><figure><div class="code-wrapper"><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Ipv4AddressHelper addressAdhoc<span class="token punctuation">;</span>addressAdhoc<span class="token punctuation">.</span><span class="token function">SetBase</span><span class="token punctuation">(</span><span class="token string">"10.1.1.0"</span><span class="token punctuation">,</span> <span class="token string">"255.255.255.0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Ipv4InterfaceContainer adhocInterfaces<span class="token punctuation">;</span>adhocInterfaces <span class="token operator">=</span> addressAdhoc<span class="token punctuation">.</span><span class="token function">Assign</span><span class="token punctuation">(</span>adhocDevices<span class="token punctuation">)</span><span class="token punctuation">;</span>OnOffHelper <span class="token function">onoff1</span><span class="token punctuation">(</span><span class="token string">"ns3::UdpSocketFactory"</span><span class="token punctuation">,</span> <span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>onoff1<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">"OnTime"</span><span class="token punctuation">,</span> <span class="token function">StringValue</span><span class="token punctuation">(</span><span class="token string">"ns3::ConstantRandomVariable[Constant=1.0]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>onoff1<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">"OffTime"</span><span class="token punctuation">,</span> <span class="token function">StringValue</span><span class="token punctuation">(</span><span class="token string">"ns3::ConstantRandomVariable[Constant=0.0]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nSinks<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    Ptr<span class="token operator">&lt;</span>Socket<span class="token operator">></span> sink <span class="token operator">=</span> <span class="token function">SetupPacketReceive</span><span class="token punctuation">(</span>adhocInterfaces<span class="token punctuation">.</span><span class="token function">GetAddress</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> adhocNodes<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    AddressValue <span class="token function">remoteAddress</span><span class="token punctuation">(</span><span class="token function">InetSocketAddress</span><span class="token punctuation">(</span>adhocInterfaces<span class="token punctuation">.</span><span class="token function">GetAddress</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    onoff1<span class="token punctuation">.</span><span class="token function">SetAttribute</span><span class="token punctuation">(</span><span class="token string">"Remote"</span><span class="token punctuation">,</span> remoteAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>    Ptr<span class="token operator">&lt;</span>UniformRandomVariable<span class="token operator">></span> var <span class="token operator">=</span> <span class="token generic-function"><span class="token function">CreateObject</span><span class="token generic class-name"><span class="token operator">&lt;</span>UniformRandomVariable<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ApplicationContainer temp <span class="token operator">=</span> onoff1<span class="token punctuation">.</span><span class="token function">Install</span><span class="token punctuation">(</span>adhocNodes<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>i <span class="token operator">+</span> nSinks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token function">Seconds</span><span class="token punctuation">(</span>var<span class="token operator">-></span><span class="token function">GetValue</span><span class="token punctuation">(</span><span class="token number">100.0</span><span class="token punctuation">,</span> <span class="token number">101.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token function">Seconds</span><span class="token punctuation">(</span>TotalTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><span class="label label-info">Bash Script to obtain multiple results automatically</span><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">output_file</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/Desktop/resultsFrom0to10.txt"</span><span class="token assign-left variable">protocol_value</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token assign-left variable">malicious_node_value</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token assign-left variable">stream_index_value</span><span class="token operator">=</span><span class="token variable">$3</span><span class="token comment"># Function to display the help message</span><span class="token function-name function">display_help</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Usage: ./script_name.sh [protocol_value] [malicious_node_value] [stream_index_value]"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Options:"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"  protocol_value        Specify the protocol value"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"  malicious_node_value  Specify the enable_malicious_node value"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"  stream_index_value    Specify the streamIndex value"</span>    <span class="token builtin class-name">echo</span><span class="token punctuation">&#125;</span><span class="token comment"># Check if the script is called with the help option</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$1</span> <span class="token operator">==</span> <span class="token string">"--help"</span> <span class="token operator">||</span> <span class="token variable">$1</span> <span class="token operator">==</span> <span class="token string">"-h"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    display_help    <span class="token builtin class-name">exit</span> <span class="token number">0</span><span class="token keyword">fi</span><span class="token comment"># Check if the number of arguments is correct</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-ne</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Error: Incorrect number of arguments."</span>    display_help    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">output_file</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/Desktop/resultsFrom0to<span class="token variable">$stream_index_value</span>-DSDV-50nodes-with-Blackhole.txt"</span><span class="token comment"># Remove the output file if it already exists</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$output_file</span>"</span><span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index<span class="token operator">&lt;=</span>$stream_index_value<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token keyword">do</span>    ./ns3 run aodv-and-dsdv-compare -- <span class="token parameter variable">--protocol</span><span class="token operator">=</span><span class="token variable">$protocol_value</span> <span class="token parameter variable">--enable_malicious_node</span><span class="token operator">=</span><span class="token variable">$malicious_node_value</span> <span class="token parameter variable">--streamIndex</span><span class="token operator">=</span><span class="token variable">$index</span> <span class="token operator">>></span> <span class="token string">"<span class="token variable">$output_file</span>"</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><span class="label label-info">Line chart drawer by Python</span><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Get the end-to-end delay from the txt file</span><span class="token keyword">def</span> <span class="token function">getE2EDelay</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Store all total E2EDelay into a list</span>    e2eDelayList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    lineCount <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># Count E2EDelay lines</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        <span class="token keyword">if</span> lineCount <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">:</span>  <span class="token comment"># Stop when 10 nodes:</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> <span class="token string">"Average End to End Delay"</span> <span class="token keyword">in</span> line<span class="token punctuation">:</span>            lineCount <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token comment"># Find the index of the '=' character</span>            equals_index <span class="token operator">=</span> line<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span>            <span class="token comment"># Extract the substring after the '=' character</span>            timeString <span class="token operator">=</span> line<span class="token punctuation">[</span>equals_index <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>            <span class="token comment"># Parse the number part</span>            <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"([+-]?\d+\.\d+)e([+-]\d+)"</span><span class="token punctuation">,</span> timeString<span class="token punctuation">)</span>            num <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            exp <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># Calculate value</span>            val <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> exp<span class="token punctuation">)</span>            <span class="token comment"># Convert to seconds</span>            time_sec <span class="token operator">=</span> val <span class="token operator">*</span> <span class="token number">1e-9</span>            <span class="token comment"># Store the E2EDelay</span>            e2eDelayList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>time_sec<span class="token punctuation">)</span>    <span class="token keyword">return</span> e2eDelayList <span class="token comment"># Return the average E2EDelay</span><span class="token comment"># AODV vs DSDV without attack 100 topologies result comparison</span><span class="token keyword">def</span> <span class="token function">drawLineChart</span><span class="token punctuation">(</span>aodvList<span class="token punctuation">,</span> dsdvList<span class="token punctuation">,</span> aodv30NodesList<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dsdv30NodesList<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> aodv50NodesList<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dsdv50NodesList<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"AODV"</span><span class="token punctuation">:</span> aodvList<span class="token punctuation">,</span>            <span class="token string">"DSDV"</span><span class="token punctuation">:</span> dsdvList<span class="token punctuation">,</span>            <span class="token string">"AODV with Flooding"</span><span class="token punctuation">:</span> aodv30NodesList<span class="token punctuation">,</span>            <span class="token string">"DSDV with Flooding"</span><span class="token punctuation">:</span> dsdv30NodesList<span class="token punctuation">,</span>            <span class="token comment"># "AODV 50 Nodes": aodv50NodesList,</span>            <span class="token comment"># "DSDV 50 Nodes": dsdv50NodesList,</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>    <span class="token comment"># Prepare the graph</span>    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ax <span class="token operator">=</span> sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df<span class="token punctuation">)</span>    ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>xlabel<span class="token operator">=</span><span class="token string">"Sample"</span><span class="token punctuation">,</span> ylabel<span class="token operator">=</span><span class="token string">"Throughput (kbps)"</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span>title<span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># Show the graph</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><span class="label label-info">C++ code for AODV blackhole attack</span><figure><div class="code-wrapper"><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">if</span> <span class="token punctuation">(</span>IsMalicious <span class="token operator">||</span>    <span class="token punctuation">(</span><span class="token punctuation">(</span>rreqHeader<span class="token punctuation">.</span><span class="token function">GetUnknownSeqno</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token punctuation">(</span><span class="token keyword">int32_t</span><span class="token punctuation">(</span>toDst<span class="token punctuation">.</span><span class="token function">GetSeqNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">int32_t</span><span class="token punctuation">(</span>rreqHeader<span class="token punctuation">.</span><span class="token function">GetDstSeqno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      toDst<span class="token punctuation">.</span><span class="token function">GetValidSeqNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IsMalicious <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>rreqHeader<span class="token punctuation">.</span><span class="token function">GetDestinationOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> toDst<span class="token punctuation">.</span><span class="token function">GetFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> VALID<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        m_routingTable<span class="token punctuation">.</span><span class="token function">LookupRoute</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> toOrigin<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* Code for Blackhole attack */</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IsMalicious<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            Ptr<span class="token operator">&lt;</span>NetDevice<span class="token operator">></span> dev <span class="token operator">=</span>                m_ipv4<span class="token operator">-></span><span class="token function">GetNetDevice</span><span class="token punctuation">(</span>m_ipv4<span class="token operator">-></span><span class="token function">GetInterfaceForAddress</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            RoutingTableEntry <span class="token function">falseToDst</span><span class="token punctuation">(</span>                dev<span class="token punctuation">,</span>                dst<span class="token punctuation">,</span>                <span class="token boolean">true</span><span class="token punctuation">,</span>                rreqHeader<span class="token punctuation">.</span><span class="token function">GetDstSeqno</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">,</span>                m_ipv4<span class="token operator">-></span><span class="token function">GetAddress</span><span class="token punctuation">(</span>m_ipv4<span class="token operator">-></span><span class="token function">GetInterfaceForAddress</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token number">1</span><span class="token punctuation">,</span>                dst<span class="token punctuation">,</span>                m_activeRouteTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">SendReplyByIntermediateNode</span><span class="token punctuation">(</span>falseToDst<span class="token punctuation">,</span>                                        toOrigin<span class="token punctuation">,</span>                                        rreqHeader<span class="token punctuation">.</span><span class="token function">GetGratuitousRrep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* Code for Blackhole Attack Simulation ends here */</span>        <span class="token function">SendReplyByIntermediateNode</span><span class="token punctuation">(</span>toDst<span class="token punctuation">,</span> toOrigin<span class="token punctuation">,</span> rreqHeader<span class="token punctuation">.</span><span class="token function">GetGratuitousRrep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// More codes...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>M. N. B. Anwar, “Performance analysis of aodv, olsr, dsdv routing protocols in manet under black hole attack,” in Proceedings of the international conference on computing advancements, pp. 1–5, 2020.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>A. Singh, G. Singh, and M. Singh, “Comparative study of olsr, dsdv, aodv, dsr and zrp routing protocols under blackhole attack in mobile ad hoc network,” in Intelligent Communication, Control and Devices: Proceedings of ICICCD 2017, pp. 443–453, Springer, 2018.<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>A. Chavan, D. Kurule, and P. Dere, “Performance analysis of aodv and dsdv routing protocol in manet and modifications in aodv against black hole attack,” Procedia Computer Science, vol. 79, pp. 835–844, 2016.<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>Network Simulator 3</tag>
      
      <tag>C++</tag>
      
      <tag>Python</tag>
      
      <tag>Shell Script</tag>
      
      <tag>Bash Script</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Data capture app to aid researchers in the Department of English</title>
    <link href="/portfolio/2024/03/20/Data-capture-app-to-aid-researchers-in-the-Department-of-English/"/>
    <url>/portfolio/2024/03/20/Data-capture-app-to-aid-researchers-in-the-Department-of-English/</url>
    
    <content type="html"><![CDATA[<blockquote><p>A dual platform app developed by Flutter with Dart language.</p></blockquote><a class="btn" href="https://github.com/f88083/my_works/tree/main/english_research_data_collecting_app"  title="english_research_data_collecting_app" target="_blank">GitHub</a><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/zHvHDbt.png" alt="audio list"></div><div class="group-image-wrap"><img src="https://i.imgur.com/5lTJsFC.png" alt="record list"></div><div class="group-image-wrap"><img src="https://i.imgur.com/bmqqplP.png" alt="feedback list"></div></div></div><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/cdpzEgf.png" alt="audio player"></div><div class="group-image-wrap"><img src="https://i.imgur.com/yszXR4F.png" alt="setting"></div></div></div><h2 id="Project-Description"><a href="#Project-Description" class="headerlink" title="Project Description"></a>Project Description</h2><p>This app is to help the English language researchers to collect the data of the user’s understanding to the audios. It is tailored to revolutionize research at the University of Liverpool’s Department of English. This app combines an audio player with comprehension assessment, enabling seamless data collection. It boasts an intuitive UI, audio list view, dynamic data charts using “<code>syncfusion_flutter_charts</code>,” and a text feedback viewer. Crafted using <code>Flutter SDK</code> and <code>Dart</code> on <code>Windows 10</code>, this app ensures cross-platform compatibility. This tool empowers researchers by simplifying data collection and analysis, bridging the gap between innovation and practicality through a solo development effort.</p><h3 id="Using"><a href="#Using" class="headerlink" title="Using"></a>Using</h3><ul><li>Flutter SDK</li><li>Dart</li></ul><h3 id="Key-Features"><a href="#Key-Features" class="headerlink" title="Key Features"></a>Key Features</h3><ul><li>Cross-platform (Currently Android only)</li><li>Audio player</li><li>Data storage</li><li>Audio, text feedback collecting</li><li>Clear UI</li><li>Data (feedback) shows for researchers to edit</li></ul><h2 id="Highlight-Functions"><a href="#Highlight-Functions" class="headerlink" title="Highlight Functions"></a>Highlight Functions</h2><h3 id="List-views"><a href="#List-views" class="headerlink" title="List views"></a>List views</h3><ul><li>Audio lists</li><li>Clarity data list</li><li>Feedback data list</li><li>File searching block</li><li>Setting page for administrator</li></ul><h3 id="Administrator-functions"><a href="#Administrator-functions" class="headerlink" title="Administrator functions"></a>Administrator functions</h3><ul><li>Each item is removable individually</li><li>Deletion of the audios</li><li>Add audios</li></ul>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-0e876315" role="button" aria-expanded="false" aria-controls="collapse-0e876315">        <div class="fold-arrow">▶</div>Administrator Mode Screenshot      </div>      <div class="fold-collapse collapse" id="collapse-0e876315">        <div class="fold-content">          <p><img src="https://i.imgur.com/Zn26QJN.png" alt="administrator mode"></p>        </div>      </div>    </div><h3 id="Audio-Player"><a href="#Audio-Player" class="headerlink" title="Audio Player"></a>Audio Player</h3><ul><li>Play</li><li>Pause</li><li>Stop</li><li>Jump to desired timestamp by the time slider</li><li>Record the clarity value from the user by dragging the slider</li><li>Listening mode to avoid clarity data collection</li><li>Feedback frame for the users to provide text feedback to the researchers</li></ul><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/Y2GNR5r.png" alt="audio pause"></div><div class="group-image-wrap"><img src="https://i.imgur.com/Ikf4Z0B.png" alt="listening mode on"></div><div class="group-image-wrap"><img src="https://i.imgur.com/1cayHda.png" alt="submit feedback confirmation"></div></div></div><h3 id="Data-Viewing"><a href="#Data-Viewing" class="headerlink" title="Data Viewing"></a>Data Viewing</h3><ul><li>Line chart for clarity data viewing</li><li>Feedback text viewing (Font enlargeable)</li></ul><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://i.imgur.com/dIpZQdG.png" alt="clarity data viewer example"></div><div class="group-image-wrap"><img src="https://i.imgur.com/AqLOCdE.png" alt="another example of clarity data viewer"></div><div class="group-image-wrap"><img src="https://i.imgur.com/kSip0ja.png" alt="Feedback viewer"></div></div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Flutter</tag>
      
      <tag>Dart</tag>
      
      <tag>Mobile App</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity - Arkanoid Game</title>
    <link href="/portfolio/2024/03/19/Unity-Arkanoid-Game/"/>
    <url>/portfolio/2024/03/19/Unity-Arkanoid-Game/</url>
    
    <content type="html"><![CDATA[<blockquote><p>An Arkanoid game developed by Unity</p></blockquote><a class="btn" href="https://github.com/f88083/my_works/tree/main/Arkanoid_game"  title="Arkanoid Game Repository" target="_blank">GitHub</a><h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://simonlai0.files.wordpress.com/2023/09/snipaste_2023-09-16_15-52-39.jpg" alt="Main menu"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://simonlai0.files.wordpress.com/2023/09/maingame.jpg" alt="Level 1"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://simonlai0.files.wordpress.com/2023/09/snipaste_2023-09-16_16-10-44.jpg" alt="Level 2"></div></div></div><h2 id="Project-Description"><a href="#Project-Description" class="headerlink" title="Project Description"></a>Project Description</h2><p>Welcome to my Unity 3D game project, where I’ve crafted an exhilarating and captivating game called “Arkanoid Game.” This dynamic game combines the classic Arkanoid-style gameplay with exciting modern features for an unforgettable gaming experience.</p><h3 id="Using"><a href="#Using" class="headerlink" title="Using"></a>Using</h3><ul><li>Unity</li><li>C#</li><li>Blender</li></ul><h3 id="Key-Features"><a href="#Key-Features" class="headerlink" title="Key Features"></a>Key Features</h3><ul><li><strong>Unity Engine</strong>: This game is brought to life using the Unity engine, providing a versatile and powerful platform for game development.</li><li><strong>Bouncing Action</strong>: Take control of a yellow paddle to skillfully bounce a white ball, aiming to break through a wall of colorful blocks. The precision of your movements is crucial as you strategize to clear each level.</li><li><strong>Dynamic Block Types</strong>: The blocks come in various colors and offer unique effects upon collision. Hitting a slow-down brick will temporarily decrease the ball’s speed for 5 seconds, while a larger paddle brick extends your paddle’s size for 10 seconds. Discover heart bricks to gain an extra life, adding an exciting twist to the game.</li><li><strong>Visual Dynamism</strong>: Experience a dynamic background that evolves as you progress through the levels. Rotating bricks add an extra layer of complexity, challenging your aiming skills.</li></ul><h3 id="More-Features"><a href="#More-Features" class="headerlink" title="More Features"></a>More Features</h3><ul><li><strong>Varied Block Durability</strong>: Each block type has different durability levels. Green bricks are removed after a single hit, brown bricks require two hits, and blue bricks demand three hits for elimination.</li><li><strong>Obstacle Challenge</strong>: Starting from level 3, obstacles make their appearance, making each level more intricate and demanding precise gameplay.</li><li><strong>Increasing Difficulty</strong>: As you advance through levels, brace yourself for an escalating challenge. The game’s difficulty ascends progressively, keeping you engaged and motivated to conquer each stage.</li><li><strong>Audio Immersion</strong>: Immerse yourself in the gaming world with sound effects that respond to your actions and background music that sets the tone for an adrenaline-pumping experience.</li><li><strong>Special Textures</strong>: Aesthetic details matter. Special textures enhance the visual appeal of the game, making it not only fun to play but also a delight to behold.</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Unity</tag>
      
      <tag>C#</tag>
      
      <tag>Blender</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
